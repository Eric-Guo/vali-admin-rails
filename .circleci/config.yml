---
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:3.0.1-node-browsers
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: harman-vendor-test
          RAILS_ENV: test
          NOKOGIRI_USE_SYSTEM_LIBRARIES: true
          USE_OFFICIAL_GEM_SOURCE: true

      - image: circleci/postgres:10.10-alpine
        environment: # environment variables for database
          POSTGRES_USER: harman-vendor-test
          POSTGRES_DB: harman_vendor_test
          POSTGRES_PASSWORD: ""

    working_directory: ~/vali-admin

    steps:
      - checkout

      # Which version of bundler? should keep same as Gemfile.lock
      - run:
          name: install bundler v2.2.16
          command: gem install bundler:2.2.16 && bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - harman-vendor-bundle-v2-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: harman-vendor-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - harman-vendor-yarn-{{ checksum "yarn.lock" }}

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: harman-vendor-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Restore DB config
          command: cp config/database.yml.sample config/database.yml

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # run tests!
      - run:
          name: run tests
          command: bin/rails test:system test

      # Save test results for timing analysis
      - store_test_results:
          path: test/reports
